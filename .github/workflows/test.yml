# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Test with HA-core

env:
  CACHE_VERSION: 3
  DEFAULT_PYTHON: 3.9

on:
  workflow_dispatch:
  push:
#  schedule:
#    - cron: '0 0 * * 0' # weekly
# pull_request:

jobs:
  # Prepare default python version environment
  ha-core-prepare:
    runs-on: ubuntu-latest
    name: Setup for HA-core
    steps:
      - name: Check out committed code
        uses: actions/checkout@v3
      - name: Set up Python ${{ env.DEFAULT_PYTHON }}
        id: python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ env.DEFAULT_PYTHON }}
      - name: Restore base HA-core Python ${{ env.DEFAULT_PYTHON }} virtual environment
        id: cache-hacore
        uses: actions/cache@v2
        env:
          cache-name: cache-hacore
        with:
          path: ~/ha-core
          key: >-
            ${{ env.CACHE_VERSION}}-${{ runner.os }}-base-hacore-${{
            steps.python.outputs.python-version }}-${{
            hashFiles('custom_components/plugwise/manifest.json') }}-${{
            hashFiles('~/ha-core/.git/plugwise-tracking') }}
          restore-keys: |
            ${{ env.CACHE_VERSION}}-${{ runner.os }}-base-hacore-${{ steps.python.outputs.python-version }}-
            ${{ env.CACHE_VERSION}}-${{ runner.os }}-base-hacore
            ${{ env.CACHE_VERSION}}-${{ runner.os }}
            ${{ env.CACHE_VERSION}}
      # Workaround, even though cache restored on new(er) PR
      # cache-hit isn't registered (although cache is restored
      - name: Create HA-core Python virtual environment
        run: |
          if [ -f ~/ha-core/requirements_test_all.txt ]; then
              cd ~/ha-core
              git config pull.rebase true
              git reset --hard
              git pull
          else
              git clone https://github.com/home-assistant/core.git ~/ha-core
              cd ~/ha-core
              git config pull.rebase true
              git checkout dev
              script/setup
              . venv/bin/activate
              pip install -q -r requirements_test.txt
          fi
          git log -1 | head -1 > ~/ha-core/.git/plugwise-tracking

  # Reset GIT, preload and execute tests
  ha-core-test:
    runs-on: ubuntu-latest
    name: Test against HA-core
    needs: ha-core-prepare
    steps:
      - name: Check out committed code
        uses: actions/checkout@v3
      - name: Set up Python ${{ env.DEFAULT_PYTHON }}
        id: python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ env.DEFAULT_PYTHON }}
      - name: Restore base HA-core Python ${{ env.DEFAULT_PYTHON }} virtual environment
        id: cache-hacore
        uses: actions/cache@v2
        env:
          cache-name: cache-hacore
        with:
          path: ~/ha-core
          key: >-
            ${{ env.CACHE_VERSION}}-${{ runner.os }}-base-hacore-${{
            steps.python.outputs.python-version }}-${{
            hashFiles('custom_components/plugwise/manifest.json') }}-${{
            hashFiles('~/ha-core/.git/plugwise-tracking') }}
          restore-keys: |
            ${{ env.CACHE_VERSION}}-${{ runner.os }}-base-hacore-${{ steps.python.outputs.python-version }}-
            ${{ env.CACHE_VERSION}}-${{ runner.os }}-base-hacore
            ${{ env.CACHE_VERSION}}-${{ runner.os }}
            ${{ env.CACHE_VERSION}}
      - name: Fail job if Python cache restore failed
        if: steps.cache-hacore.outputs.cache-hit != 'true'
        run: |
          echo "Failed to restore Python ${{ env.DEFAULT_PYTHON }} virtual environment from cache"
          exit 1
      - name: Debug
        run: |
          pwd
          env
          set
          ls -l
          ls -l ~
          ls -l ~/ha-core

  shellcheck:
    name: Shellcheck
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Run ShellCheck
        uses: ludeeus/action-shellcheck@master
